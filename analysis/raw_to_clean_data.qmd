---
title: "raw_to_clean_data_code"
format: html
---

# Researcher burnout and questionable research practice pilot data cleaning

## Raw to clean data

### Installing packages

```{r echo=FALSE, output=FALSE}
library(tidyverse)
library(here)
data_path <- here("data")
```

### Importing data

```{r echo=FALSE}
raw_data_01 = read.csv(here::here("data/raw/april_09_decisionlab.csv"))
raw_data_02 = read.csv(here::here("data/raw/april_09_aczellab.csv"))

if (identical(names(raw_data_01), names(raw_data_02))) {
  cat("The column names are identical.\n")
} else {
  cat("The column names are different.\n")
}

raw_data = raw_data_01 |> 
  bind_rows(raw_data_02)
```

### Filtering out irrelevant data for analysis

```{r}
raw_data_filtered = raw_data |> 
  select(-StartDate, 
         -EndDate,
         -Status,
         -Duration..in.seconds.,
         -Progress,
         -RecordedDate,
         -ResponseId,
         -UserLanguage,
         -DistributionChannel)

meta_data = raw_data |> 
  select(StartDate, 
         EndDate,
         Status,
         Duration..in.seconds.,
         Progress,
         RecordedDate,
         ResponseId,
         UserLanguage,
         DistributionChannel)
```

### Creating codebook

```{r}
raw_data_filtered_codebook = raw_data_filtered[1, , drop = FALSE]
```

### Unifying syntax

```{r}
raw_data_filtered = raw_data_filtered |> 
  rename_with(tolower) |> 
  slice(-c(1, 2))
```

### Checking for invalid data

```{r}
participant_data = raw_data_filtered |> 
  summarize(n_all = n(),
            n_finished = sum(finished == "True"),
            n_consent = sum(consent == "Yes"),
            n_academic = sum(academic_yes_no == "Yes"),
            n_research = sum(research_yes_no == "Yes"))
```

### Creation of anonym id and dropping unnecessary columns

```{r}
raw_data_filtered = raw_data_filtered |> 
  mutate(anonym_id = row_number()) |> 
  mutate(finished = ifelse(finished == "True", T, F),
         consent = ifelse(consent == "Yes", T, F),
         academic_yes_no = ifelse(academic_yes_no == "Yes", T, F),
         research_yes_no = ifelse(research_yes_no == "Yes", T, F))
```

### Locate attention check questions

```{r}
#For copsoq_wokload_5, "Rarely" is the correct answer
#For attention_2, "Strongly agree" is the correct answer

attention_check = raw_data_filtered |> 
  select(copsoq_workload_5, attention_2, anonym_id)

attention_check = attention_check |> 
  mutate(copsoq_workload_5 = if_else(copsoq_workload_5 == "Rarely", 1, 0),
         attention_2 = if_else(attention_2 == "Strongly agree", 1, 0)) |> 
  mutate(attention = ifelse(copsoq_workload_5 == 0 & attention_2 == 0, "Failed", "Passed")) |> 
  select(attention, anonym_id)

raw_data_filtered_valid = raw_data_filtered |> 
  left_join(attention_check, by = "anonym_id")
```

# Saving data

```{r}
write.csv(raw_data_filtered_valid, here::here("data/processed/raw_to_clean_data.csv"), row.names = FALSE)
write.csv(raw_data_filtered_codebook, here::here("data/processed/codebook.csv"), row.names = FALSE)
write.csv(meta_data, here::here("data/processed/meta_data.csv"), row.names = FALSE)
write.csv(participant_data, here::here("data/processed/participant_checks.csv"), row.names = FALSE)
```
