---
title: "aggregation"
author: "Dominik Dianovics"
format: html
---

## Researcher burnout and questionable research practice pilot data cleaning

### Processed to aggregated data

#Loading packages

```{r}
library(tidyverse)
library(here)
library(psych)
data_path <- here("data")
```

#Loading data

```{r}
processed = read_csv(here::here("data/processed_data.csv"))
```

#Filtering out invalid data

```{r}
processed_filtered = processed |> 
  filter(finished == T 
         & consent == T 
         & academic_yes_no == T
         & research_yes_no == T
         & last_published != "More than 10 years ago or Never"
         & attention == "Passed"
         & lazy_responding == F
         & complete.cases(select(processed, -phd_dissertation))
  )
```

# Checking cronbach alpha
```{r}
surveys = c("bat", "ppqr_stress", "ppqr_attitude", "ppqr_resources", "copsoq_workload", "copsoq_soc_sup", "copsoq_oppor", "wlbm", "jis",
            "qrp_attitude", "copsoq_infl", "copsoq_meaning", "role_ambiguity", "role_conflict",
            "pay_satisfaction", "tool_satisfaction", "general_satisfaction")

alpha_function = function(data, survey){
  data |>
    select(starts_with(survey)) |>
    psych::alpha() |>
    pluck("total") |>
    as.data.frame() |>
    mutate(survey = survey) |> 
    select(survey, raw_alpha)
}

cronbach_results = data.frame()

for (survey in surveys){
  alpha_result = alpha_function(processed_filtered, survey)
  cronbach_results = rbind(cronbach_results, alpha_result)
}

write.csv(cronbach_results, here::here("analysis/tables/cronbach_alpha.csv"), row.names = FALSE)
```

# Aggregating data
```{r}
surveys = c("bat", "ppqr_stress", "ppqr_attitude", "ppqr_resources", "copsoq_workload", "copsoq_soc_sup", "copsoq_oppor", "wlbm", "jis",
            "qrp_attitude", "copsoq_infl", "copsoq_meaning", "role_ambiguity", "role_conflict",
            "pay_satisfaction", "tool_satisfaction", "general_satisfaction", "open_practice")

aggregate_function = function(data, survey){
  data |>
    group_by(anonym_id) |>
    summarize("{survey}_total" := rowSums(across(starts_with(survey)), na.rm = TRUE))
}

for (survey in surveys){
  assign(paste0(survey, "_aggregated"), aggregate_function(processed_filtered, survey))
}

aggregated_datasets <- mget(ls(pattern = "_aggregated$"))
aggregated_data <- reduce(aggregated_datasets, left_join, by = "anonym_id")
```

#Checking for error while aggregating

```{r}
bat_aggregated_manual = processed_filtered |>
  group_by(anonym_id) |>
  summarize(bat_total = rowSums(across(starts_with("bat")), na.rm = TRUE))

role_ambiguity_aggregated_manual = processed_filtered |>
  group_by(anonym_id) |>
  summarize(role_ambiguity_total = rowSums(across(starts_with("role_ambiguity")), na.rm = TRUE))

#Compare
all(bat_aggregated$bat_total == bat_aggregated_manual$bat_total)
all(role_ambiguity_aggregated$role_ambiguity_total == role_ambiguity_aggregated_manual$role_ambiguity_total)
```

#Joining aggregate data with descriptives

```{r}
aggregated_data = processed_filtered |> 
  select(anonym_id, gender:lazy_responding) |> 
  left_join(aggregated_data, by = "anonym_id")
```

#Rename columns

```{r}
aggregated_data_final = aggregated_data |> 
  rename(burnout = bat_total,
         pub_pressure_stress = ppqr_stress_total,
         pub_pressure_attitude = ppqr_attitude_total,
         pub_pressure_resource = ppqr_resources_total,
         workload = copsoq_workload_total,
         social_support = copsoq_soc_sup_total,
         opportunities = copsoq_oppor_total,
         qrp_attitude = qrp_attitude_total,
         influence = copsoq_infl_total,
         meaning = copsoq_meaning_total,
         role_ambiguity = role_ambiguity_total,
         role_conflict = role_conflict_total,
         pay_satisfaction = pay_satisfaction_total,
         tool_satisfaction = tool_satisfaction_total,
         general_satisfaction = general_satisfaction_total,
         open_practice = open_practice_total,
         job_security = jis_total,
         work_life_balance = wlbm_total)
```

#Save data

```{r}
write_csv(aggregated_data_final, here::here("data/aggregated_data.csv"))
```
